{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abuba\\\\fullstackapp\\\\frontend\\\\src\\\\components\\\\details\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  location\n}) => {\n  _s();\n  const [position, setPosition] = useState(null);\n  useEffect(() => {\n    if (!location) return;\n\n    // Free Geocoding API - Nominatim (no key required)\n    const fetchCoordinates = async () => {\n      try {\n        const res = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(location)}`);\n        const data = await res.json();\n        if (data && data[0]) {\n          setPosition([parseFloat(data[0].lat), parseFloat(data[0].lon)]);\n        } else {\n          console.error(\"Location not found\");\n        }\n      } catch (err) {\n        console.error(\"Error fetching location:\", err);\n      }\n    };\n    fetchCoordinates();\n  }, [location]);\n  const markerIcon = new L.Icon({\n    iconUrl: \"https://cdn-icons-png.flaticon.com/512/684/684908.png\",\n    iconSize: [35, 35]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"400px\",\n      width: \"100%\"\n    },\n    children: position ? /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: position,\n      zoom: 13,\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        borderRadius: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: position,\n        icon: markerIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"21xrY1Hz2JYGCGa5HZbMtpLbidU=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","Map","location","_s","position","setPosition","fetchCoordinates","res","fetch","encodeURIComponent","data","json","parseFloat","lat","lon","console","error","err","markerIcon","Icon","iconUrl","iconSize","style","height","width","children","center","zoom","borderRadius","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","icon","className","_c","$RefreshReg$"],"sources":["C:/Users/abuba/fullstackapp/frontend/src/components/details/Map.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\n\r\nconst Map = ({ location }) => {\r\n  const [position, setPosition] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!location) return;\r\n\r\n    // Free Geocoding API - Nominatim (no key required)\r\n    const fetchCoordinates = async () => {\r\n      try {\r\n        const res = await fetch(\r\n          `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(location)}`\r\n        );\r\n        const data = await res.json();\r\n        if (data && data[0]) {\r\n          setPosition([parseFloat(data[0].lat), parseFloat(data[0].lon)]);\r\n        } else {\r\n          console.error(\"Location not found\");\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching location:\", err);\r\n      }\r\n    };\r\n\r\n    fetchCoordinates();\r\n  }, [location]);\r\n\r\n  const markerIcon = new L.Icon({\r\n    iconUrl: \"https://cdn-icons-png.flaticon.com/512/684/684908.png\",\r\n    iconSize: [35, 35],\r\n  });\r\n\r\n  return (\r\n    <div style={{ height: \"400px\", width: \"100%\" }}>\r\n      {position ? (\r\n        <MapContainer center={position} zoom={13} style={{ height: \"100%\", width: \"100%\" ,borderRadius:\"10px\"}}>\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors'\r\n          />\r\n          <Marker position={position} icon={markerIcon}>\r\n            <Popup>{location}</Popup>\r\n          </Marker>\r\n        </MapContainer>\r\n      ) : (\r\n        <p className=\"text-gray-500\">Loading map...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}