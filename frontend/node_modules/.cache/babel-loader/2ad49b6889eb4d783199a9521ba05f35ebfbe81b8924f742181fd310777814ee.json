{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abuba\\\\fullstackapp\\\\frontend\\\\src\\\\components\\\\details\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  location\n}) => {\n  _s();\n  const [position, setPosition] = useState(null);\n\n  // üß† Function to clean complex business addresses for better results\n  const cleanAddress = addr => {\n    if (!addr) return \"\";\n    return addr.replace(/Autocenter|GmbH|DE-|and/gi, \"\") // remove company names, \"DE-\", etc.\n    .replace(/\\s+/g, \" \") // normalize spaces\n    .trim();\n  };\n  useEffect(() => {\n    if (!location) return;\n    const fetchCoordinates = async () => {\n      try {\n        const query = cleanAddress(location);\n\n        // 1Ô∏è‚É£ Try full address first\n        let res = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}`);\n        let data = await res.json();\n\n        // 2Ô∏è‚É£ If no result, try fallback using only city/postal code\n        if (!data || data.length === 0) {\n          const fallbackQuery = query.split(\" \").slice(-3).join(\" \"); // take last part (city + postal code)\n\n          res = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(fallbackQuery + \", Germany\")}`);\n          data = await res.json();\n        }\n\n        // 3Ô∏è‚É£ Set position if found\n        if (data && data[0]) {\n          const lat = parseFloat(data[0].lat);\n          const lon = parseFloat(data[0].lon);\n          setPosition([lat, lon]);\n        } else {\n          console.error(\"No valid coordinates found even after fallback.\");\n        }\n      } catch (err) {\n        console.error(\"Error fetching location:\", err);\n      }\n    };\n    fetchCoordinates();\n  }, [location]);\n\n  // üìç Custom marker icon\n  const markerIcon = new L.Icon({\n    iconUrl: \"https://cdn-icons-png.flaticon.com/512/684/684908.png\",\n    iconSize: [35, 35]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"400px\",\n      width: \"100%\"\n    },\n    children: position ? /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: position,\n      zoom: 13,\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        borderRadius: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: position,\n        icon: markerIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"21xrY1Hz2JYGCGa5HZbMtpLbidU=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","Map","location","_s","position","setPosition","cleanAddress","addr","replace","trim","fetchCoordinates","query","res","fetch","encodeURIComponent","data","json","length","fallbackQuery","split","slice","join","lat","parseFloat","lon","console","error","err","markerIcon","Icon","iconUrl","iconSize","style","height","width","children","center","zoom","borderRadius","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","icon","className","_c","$RefreshReg$"],"sources":["C:/Users/abuba/fullstackapp/frontend/src/components/details/Map.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\n\r\nconst Map = ({ location }) => {\r\n    const [position, setPosition] = useState(null);\r\n\r\n    // üß† Function to clean complex business addresses for better results\r\n    const cleanAddress = (addr) => {\r\n        if (!addr) return \"\";\r\n        return addr\r\n            .replace(/Autocenter|GmbH|DE-|and/gi, \"\") // remove company names, \"DE-\", etc.\r\n            .replace(/\\s+/g, \" \") // normalize spaces\r\n            .trim();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!location) return;\r\n\r\n        const fetchCoordinates = async () => {\r\n            try {\r\n                const query = cleanAddress(location);\r\n\r\n                // 1Ô∏è‚É£ Try full address first\r\n                let res = await fetch(\r\n                    `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\r\n                        query\r\n                    )}`\r\n                );\r\n                let data = await res.json();\r\n\r\n                // 2Ô∏è‚É£ If no result, try fallback using only city/postal code\r\n                if (!data || data.length === 0) {\r\n                    const fallbackQuery = query\r\n                        .split(\" \")\r\n                        .slice(-3)\r\n                        .join(\" \"); // take last part (city + postal code)\r\n\r\n                    res = await fetch(\r\n                        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\r\n                            fallbackQuery + \", Germany\"\r\n                        )}`\r\n                    );\r\n                    data = await res.json();\r\n                }\r\n\r\n                // 3Ô∏è‚É£ Set position if found\r\n                if (data && data[0]) {\r\n                    const lat = parseFloat(data[0].lat);\r\n                    const lon = parseFloat(data[0].lon);\r\n                    setPosition([lat, lon]);\r\n                } else {\r\n                    console.error(\"No valid coordinates found even after fallback.\");\r\n                }\r\n            } catch (err) {\r\n                console.error(\"Error fetching location:\", err);\r\n            }\r\n        };\r\n\r\n        fetchCoordinates();\r\n    }, [location]);\r\n\r\n    // üìç Custom marker icon\r\n    const markerIcon = new L.Icon({\r\n        iconUrl: \"https://cdn-icons-png.flaticon.com/512/684/684908.png\",\r\n        iconSize: [35, 35],\r\n    });\r\n\r\n    return (\r\n        <div style={{ height: \"400px\", width: \"100%\" }}>\r\n            {position ? (\r\n                <MapContainer\r\n                    center={position}\r\n                    zoom={13}\r\n                    style={{ height: \"100%\", width: \"100%\", borderRadius: \"10px\" }}\r\n                >\r\n                    <TileLayer\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        attribution='&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors'\r\n                    />\r\n                    <Marker position={position} icon={markerIcon}>\r\n                        <Popup>{location}</Popup>\r\n                    </Marker>\r\n                </MapContainer>\r\n            ) : (\r\n                <p className=\"text-gray-500\">Loading map...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}